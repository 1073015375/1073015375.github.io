<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[PicGo+GitHub-一款方便的图床工具]]></title>
    <url>%2F2019%2F09%2F09%2FPicGo%2F</url>
    <content type="text"><![CDATA[PicGo目前可谓最为流行的图床工具，本教程包含PicGo关联你的GitHub（其它服务器也可，详细请点击阅读） PicGo介绍文字说明PicGo一个多功能、便捷、且持续更新图床工具。Picgo可以关联到你的图片上传的服务器/网站上，这样不登录网站就可以快速生成图片的网站格式！本教程服务器使用GitHub，方便快捷，不用担心服务器的关闭或者不稳定因素。 同时，PicGo支持以下： PicGo在上传图片之后自动会将图片链接复制到你的剪贴板里，可选5种复制的链接格式。 PicGo目前支持了 微博图床 v1.0 七牛图床 v1.0 腾讯云COS v4\v5版本 v1.1 &amp; v1.5.0 又拍云 v1.2.0 GitHub v1.5.0 SM.MS v1.5.1 阿里云OSS v1.6.0 Imgur v1.6.0 本体不再增加默认的图床支持。你可以自行开发第三方图床插件。 支持macOS、windows 64位（&gt;= v1.3.1），linux（&gt;= v1.6.0）。 PicGo同样支持动态图片，一键拖拽即可，方便快捷～ 图片说明 PicGo下载安装macOS用户请下载最新版本的dmg文件，windows用户请下载最新版本的exe文件，linux用户请下载AppImage文件。 点击此处下载应用。 如果你是Arch类的Linux用户，可以直接通过aurman -S picgo-appimage来安装PicGo。感谢@houbaron的贡献！ ​ ————————转自PicGo官方文档 GitHub部署依次点击New→Create repository→Settings→Developer settings→Personal access tokens→Generate new token→Generate token，如下图所示： 注：本图中，Note为描述，可随意填写。同时钩上repo即可创建。 复制tokens，注意 tokens 只出现一次，刷新后需重新创建。 PicGo设置 如图: 仓库名格式：账号名/仓库名 分支： master Token ：上面操作你所复制的tokens 存储路径：img/ 这个为在GitHub中储存图片的路径 自定义域名：https://raw.githubusercontent.com/账号名/PicGo/分支名 如我设置为` https://raw.githubusercontent.com/1073015375/PicGo/master` PicGo部分设置： 后言至此，GitHub仓库和PicGo已经关联，只需把图片投入PicGo即可使用～ 有何疑问可在下面评论留言，或QQ联系～]]></content>
  </entry>
  <entry>
    <title><![CDATA[PanDownload介绍]]></title>
    <url>%2F2019%2F09%2F08%2FPanDownload%2F</url>
    <content type="text"><![CDATA[百度网盘几十kb/s?会员也没用？试试这个！专门用于下载百度网盘的文件。 PanDownload介绍PanDownload可以下载任何的百度网盘中的文件，有电脑版，安卓版，网页版（推荐）基本不会限速。 亲测百度网盘上的几十kb/s，在网页版中有几m/s的速度！ 网页版网页版不用下载任何东西就可下载文件，推荐。 网页地址为：PanDownload网页版 如果有多p文件下载，可以使用电脑版进行下载，操作方便。&lt;HR align=center width= color=#9DB3B3 SIZE=1.5&gt; 其他版本偷点懒，你可以直接去Pandownload官网进行下载。 后言不知道电脑版怎么用？电脑版功能有什么呢？使用时遇到了问题？ 欢迎你去Pandownload官网查询，方便快捷！ Pandownload官网目录预览 使用说明 1.1. 账号登录 1.2. 文件下载 1.3. 打开分享链接 1.4. 在线解压 1.5. 离线下载 1.6. 新番下载 1.7. 远程下载 1.8. 设置 常见问题 2.1. 连接服务器失败 2.2. 初始化下载引擎失败 2.3. 初始化脚本失败 2.4. 无法登录网盘账号 2.5. 下载失败，出现错误 2.6. 下载速度慢，账号被限速 2.7. 怎么设置代理 2.8. 使用cookie登录网盘账号 2.9. 安装扩展脚本 2.10. 修改浏览器UA 2.11. 交流反馈 你可以先在这里预览界面，看是否有所需求。]]></content>
  </entry>
  <entry>
    <title><![CDATA[java环境配置以及软件下载（eclipse或idea）详细教程]]></title>
    <url>%2F2019%2F09%2F06%2Fjdk-and-software%2F</url>
    <content type="text"><![CDATA[本文从jdk下载安装到软件正式使用，都有详细图文教程，适合新手观看。若有疑问可在下方评论留言或QQ：1073015375联系～&lt;HR align=center width= color=#9DB3B3 SIZE=1.5&gt; 前言本教程基于Windows平台，MacOs平台自带环境。&lt;HR align=center width= color=#9DB3B3 SIZE=1.5&gt; jdk下载安装点击这里jdk官网 jdk目前最新微jdk12，找到想要下载的版本，点击DOWNLOAD。 先点击Accept License Agreement，后在下方下载jdk即可。 &lt;HR align=center width= color=#9DB3B3 SIZE=1.5&gt; 关于电脑系统是32位还是64位？右键 我的电脑→系统类型。如图所示： 注：jdk安装时直接next即可，一般使用默认储存地址c盘。&lt;HR align=center width= color=#9DB3B3 SIZE=1.5&gt; java环境配置右键 我的电脑→高级系统设置。 点击下方环境变量(N)…。 1 在系统变量(S)窗口点击新建(W)…。注：不是上方用户变量(U)窗口。 输入 变量名：JAVA_HOME （用于说明JDK的安装目录） ​ 变量值：你的jdk的路径 （图2可获取jdk路径） 2 继续在系统变量窗口找到Path，双击。 点击编辑文本。 修改系统环境变量Path，在最前面追加%JAVA_HOME%\bin 并以;和原路径分隔。再增加：“.;”。这是表示当前目录的意思。 3 ① jdk1.5以上不用配置classpath这个环境变量，jre会自动搜索当前路径下的类文件及jar文件。 验证java环境是否成功配置。 ②不要使用中文的标点符号！如果配置没有成功，记得看看自己是否忘了用英文标点。&lt;HR align=center width= color=#9DB3B3 SIZE=1.5&gt; 验证java环境是否成功配置打开终端，win+r打开“运行”，输入cmd并确定 输入命令行 java -version，若下方出现jdk版本号，则说明配置成功！ &lt;HR align=center width= color=#9DB3B3 SIZE=1.5&gt; java软件对于java，目前多使用eclipse或者idea。&lt;HR align=center width= color=#9DB3B3 SIZE=1.5&gt; Eclipse下载点击eclipse官网,下载Eclipse IDE for Java Developers。 点击Download或者下方File链接，两者皆可。 出现该页面则说明开始下载eclipse，该页面为捐助官网。 注意：我这里使用了Microsoft Edge浏览器，打开和保存均为下载，打开→可理解为一次性，保存（推荐）→误点仍可找到下载完成的文件。推荐使用Google Chrome浏览器或其它。&lt;HR align=center width= color=#9DB3B3 SIZE=1.5&gt; Idea（推荐）点击idea官网，找到合适的电脑系统，下载Community版（社区版，免费），如图： idea安装界面如下： 这是设置idea界面主题，推荐左边黑色主题。 结束语jdk推荐使用1.8版本以上，不必一定使用最新版。]]></content>
  </entry>
  <entry>
    <title><![CDATA[笔记《JAVA语言程序设计与数据结构（基础篇）》部分习题解答]]></title>
    <url>%2F2019%2F08%2F18%2Fjavanodes%2F</url>
    <content type="text"><![CDATA[本书课后习题多而精，故选取有代表意义的习题，由此记录每道题学到的知识。纯新手向，从中学到的知识有简单有新奇。 第十三章 抽象类和接口*13.17123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384import java.util.Scanner;/** * \* Program: Complex class *13.17 * \* User: breidincasimi * \* Date: 2019-08-14 * \* Time: 09:45 * \* Description: 复数的四则运算和绝对值 */public class Complex &#123; public double a; public double b; public Complex() &#123; &#125; public Complex(double a, double b) &#123; this.a = a; this.b = b; &#125; public Complex(double a) &#123; this.a = a; &#125; // 返回复数的实部 public double getRealPart() &#123; return this.a; &#125; // 返回复数的虚部 public double getImaginaryPart() &#123; return this.b; &#125; //2个复数的相 加 public void add(Complex other) &#123; double real = this.a + other.a; double imaginary = this.b + other.b; System.out.print(&quot;(&quot;+this.a+&quot; + &quot;+this.b+&quot;) + (&quot;+other.a+&quot; + &quot;+other.b+&quot;) = &quot;); System.out.println(real + &quot; + &quot; + imaginary + &quot;i&quot;); &#125; //2个复数的相 减 public void subtract(Complex other) &#123; double real = this.a - other.a; double imaginary = this.b - other.b; System.out.print(&quot;(&quot;+this.a+&quot; + &quot;+this.b+&quot;) - (&quot;+other.a+&quot; + &quot;+other.b+&quot;) = &quot;); System.out.println(real + &quot; + &quot; + imaginary + &quot;i&quot;); &#125; //2个复数的相 乘 public void multiply(Complex other) &#123; double real = (this.a * other.a) - (this.b * other.b); double imaginary = (this.b * other.a) + (this.a * other.b); System.out.print(&quot;(&quot;+this.a+&quot; + &quot;+this.b+&quot;) * (&quot;+other.a+&quot; + &quot;+other.b+&quot;) = &quot;); System.out.println(real + &quot; + &quot; + imaginary + &quot;i&quot;); &#125; //2个复数的相 除 public void divide(Complex other) &#123; double fm = (other.a * other.a) + (other.b * other.b); double real = ((this.a * other.a) + (this.b * other.b)) / fm; double imaginary = ((this.b * other.a) - (this.a * other.b)) / fm; System.out.print(&quot;(&quot;+this.a+&quot; + &quot;+this.b+&quot;) / (&quot;+other.a+&quot; + &quot;+other.b+&quot;) = &quot;); System.out.println(real + &quot; + &quot; + imaginary + &quot;i&quot;); &#125; //返回复数的绝对值 public static void abs(Complex other) &#123; double fz = (other.a * other.a) + (other.b * other.b); System.out.print(&quot;|(&quot;+other.a+&quot; + &quot;+other.b+&quot;)| = &quot;); System.out.println(Math.sqrt(fz)); &#125; public static void main(String[] args) &#123; Scanner input = new Scanner(System.in); //分别输入两个复数 System.out.print(&quot;Enter the first complex number: &quot;); Complex p1 = new Complex(input.nextDouble(),input.nextDouble()); System.out.print(&quot;Enter the second complex number: &quot;); Complex p2 = new Complex(input.nextDouble(),input.nextDouble()); //调用方法 p1.add(p2); p1.subtract(p2); p1.multiply(p2); p1.divide(p2); abs(p1); &#125;&#125; 笔记：由相加的方法（public void add(Complex other)）可以看出，可以传入Complex（本类）类的参数。由此可通过this.和参数.来比较。即为（Complex other），而非开始想到的这种（double c,double d，然后通过this.a和c比较，这种太麻烦了 第十二章 异常处理和文本I/O （3个#）*12.2 （4个#）1234567891011121314151617181920212223242526272829import java.util.Scanner;/** * \* Program: InputMismatchException异常 *12.2 * \* User: casimibreidin * \* Date: 2019-08-15 * \* Time: 10:08 * \* Description: 编写一个程序，提示用户读取两个整数，然后显示它们的和。程序应该在输入不正确时 * 提醒用户再次读取整数。 */public class InputMismatchException &#123; public static void main(String[] args) &#123; Scanner input = new Scanner(System.in); boolean hh = true; while (hh) &#123; try &#123; System.out.println(&quot;Enter two of number : &quot;); int a = input.nextInt(); int b = input.nextInt(); int c = a + b; System.out.println(&quot;sum : &quot; + c); hh = false; &#125; catch (java.util.InputMismatchException e) &#123; //异常和Class重名了，故用此写法 System.out.println(&quot;InputMismatchException!&quot;); input.nextLine(); &#125; &#125; &#125;&#125; 笔记：可在try…catch…中套一个while(true){}，这样当出现异常后(本题的InputMismatchException)可以再次输入，避免只允许一次的情况。]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hexo-NexT安装和优化教程（持续更新～）]]></title>
    <url>%2F2019%2F08%2F09%2FNext-theme%2F</url>
    <content type="text"><![CDATA[本教程参考了NexT官方中文文档以及收集了一些他人博客的内容，并加以整合。在文章下将依次标明地址。 前排提醒 为了主题设置更加简便，推荐使用VS Code进行主题代码的更新 同时 Mac 终端输入sudo su进入root用户， Windows 管理员打开cmd进入root用户 修改/添加代码记得: 后面留一个空格，否则无法生效。正确留白：错误： _config.yaml文件官方说明在 Hexo 中有两份主要的配置文件，其名称都是 _config.yml。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。 为了描述方便，在以下说明中，将前者称为 站点配置文件， 后者称为 主题配置文件。 安装NexT主题 首先进入你的博客目录，如我的博客目录(blog)地址为/Users/breidincasimi/blogcd your-hexo-site 再输入git clone https://github.com/iissnan/hexo-theme-next themes/next 完成后，打开 站点配置文件_config.yaml， 找到 theme 字段，并将其值更改为 next。theme: next 验证主题输入hexo s后可在浏览器访问http://localhost:4000查看效果。 Schemes三种主题在themes/next/_config.yaml中的scheme中选择自己喜欢的主题即可,如下所示。 Muse：Mist:Pisces(本人博客采用)： 1234Schemes#scheme: Muse#scheme: Mistscheme: Pisces 社交链接在themes/next/_config.yaml中的social填入社交链接。 1234social: GitHub: https://github.com/1073015375 csdn: https://blog.csdn.net/CasimiBreidin/article/details/98479038 Bilibili: https://space.bilibili.com/19412606 链接图标可去Font Awesome找到。设置如下： 123social_icons: GitHub: github csdn: crosshairs 友情链接在themes/next/_config.yaml中的links填入友情链接。 123links: Baidu: http://lab.mkblog.cn/lmbtfy/ Google: http://www.google.com.hk 打赏在themes/next/_config.yaml中的Reward添加支付宝/微信图片。 12345# Rewardreward_comment: 有趣的话给我一瓶肥宅快乐水吧～wechatpay: /images/wx.JPGalipay: /images/zfb.JPGbitcoin: #/images/dashang.png Valine评论（推荐） 注册LeanCloud并创建应用，名字可随便，选择开发版。 点击安全中心，在服务开关中，只打开数据储存。 在Web 安全域名中填入域名 在themes/next/_config.yaml中的valine中填写appid和appkey。 (别忘记把enable：false改为true) 12345678910valine: enable: true # 打开valine评论功能 appid: appkey: notify: false # 邮件提醒 verify: false # 评论时是否有验证码，需要在Leancloud 设置-&gt;安全中心 中打开 placeholder: ～各位可以畅所欲言～ # 评论框默认显示 avatar: mm # 评论者的头像 guest_info: nick,mail,link # custom comment header pageSize: 10 # pagination size 其中appid和appkey在LeanCloud中的应用key获取。 配置CDN点击https://www.jsdelivr.com/package/npm/valine获取最新的cdn地址：后在themes/next/layout/_third-party/comments/valine.swig将官方cdn//unpkg.com/valine/dist/Valine.min.js换成获取的cdn//cdn.jsdelivr.net/npm/valine@1.3.9/dist/Valine.min.js 此时可以hexo s临时查看Valine是否成功出现！ 动态背景进入themes/next/layout/_layout.swig，在 &lt; /body&gt;之前添加代码。 123&#123;% if theme.canvas_nest %&#125;&lt;script type=&quot;text/javascript&quot; src=&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;&gt;&lt;/script&gt;&#123;% endif %&#125; 后在themes/next/_config.yml中设置 12# Canvas-nestcanvas_nest: true 文章内链接颜色在themes/next/source/css/_common/components/post/post.styl中添加代码： 12345678910.post-body p a &#123; color: #0593d3; border-bottom: none; border-bottom: 1px solid #0593d3; &amp;:hover &#123; color: #fc6423; border-bottom: none; border-bottom: 1px solid #fc6423; &#125;&#125; 注：其中颜色可自定义。 文章阴影在themes/next/source/css/_custom/custom.styl中添加如下代码： 123456789// Custom styles.// 文章添加阴影.post &#123; margin-top: 60px; margin-bottom: 60px; padding: 25px; -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5); -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);&#125; 头像设置/翻转效果头像设置：找到themes/next/source/css/_custom/custom.styl中的avatar，添加本地图片链接。翻转效果：找到themes/next/source/css/_common/components/sidebar中的sidebar-author.styl将css样式内容全部替换为代码： 123456789101112131415161718192021222324252627282930313233.site-author-image &#123; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; border-radius: 50%; -webkit-border-radius: 50%; -moz-border-radius: 50%; transition: 1.4s all;&#125;.site-author-image:hover &#123; -webkit-transform: rotate(360deg); -moz-transform: rotate(360deg); -ms-transform: rotate(360deg); -transform: rotate(360deg);&#125;.site-author-name &#123; margin: $site-author-name-margin; text-align: $site-author-name-align; color: $site-author-name-color; font-weight: $site-author-name-weight;&#125;.site-description &#123; margin-top: $site-description-margin-top; text-align: $site-description-align; font-size: $site-description-font-size; color: $site-description-color;&#125; 点击出现红心在themes/next/source/js/src下新建文件 clicklove.js。并添加代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document); 找到themes/next/layout/_layout.swig在末尾添加代码，用来引用clicklove.js。 12&lt;!-- 页面点击小红心 --&gt;&lt;!-- &lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clicklove.js&quot;&gt;&lt;/script&gt; 文章结束标记1 在themes/next/layout/_macro中新建passage-end-tag.swig，并添加代码： 12345&lt;div&gt; &#123;% if not is_index %&#125; &lt;div style=&quot;text-align:center;color: #ccc;font-size:14px;&quot;&gt;-------------本文结束&lt;i class=&quot;fa fa-paw&quot;&gt;&lt;/i&gt;感谢阅读-------------&lt;/div&gt; &#123;% endif %&#125;&lt;/div&gt; 2 在themes/next/layout/_macro/post.swig中添加代码： 12345&lt;div&gt; &#123;% if not is_index %&#125; &#123;% include &apos;passage-end-tag.swig&apos; %&#125; &#123;% endif %&#125;&lt;/div&gt; 3 在themes/_config.yaml末尾添加代码： 12passage_end_tag: enabled: true 安装Live2d 看板娘1.安装hexo-helper-live2d –save文件 在博客根目录输入npm install hexo-helper-live2d --save 若安装失败，Windows可在git bash安装，Mac可输入cnpm install hexo-helper-live2d --save 比如我安装所有插件只能使用cnpm而非npm，原因未知._.2.在站点配置文件_config.yaml中（非themes/_config.yaml的！）添加代码： 123456789101112131415live2d: enable: true scriptFrom: local pluginRootPath: live2dw/ pluginJsPath: lib/ pluginModelPath: assets/ model: # 填写你所需要的看板娘名称 use: live2d-widget-model-tororo display: position: right width: 150 height: 300 mobile: show: true 其中看板娘可在https://blog.csdn.net/wang_123_zy/article/details/87181892预览或者点击这里查看官方。 3.安装看板娘所需文件输入npm install live2d-widget-model-name，其中name为你选择的看板娘名字，如npm install live2d-widget-model-tororo，保存后可输入 12hexo cleanhexo s 可先在本地网址预览。 Fork me on github 1 点击这里选择样式。 如这里我选择黑色样式，复制右边原代码： 1234567&lt;a href=&quot;https://github.com/you&quot;&gt;&lt;img width=&quot;149&quot; height=&quot;149&quot; src=&quot;https://github.blog/wp-content/uploads/2008/12/forkme_right_darkblue_121621.png?resize=149%2C149&quot; class=&quot;attachment-full size-full&quot; alt=&quot;Fork me on GitHub&quot; data-recalc-dims=&quot;1&quot;&gt;&lt;/a&gt; 2 将代码段开头的https://github.com/you换成自己的github链接。 3 找到themes/next/layout/_layout.swig，向里面添加上面所改后的代码段，并放在&lt; div class=”headband”&gt;的下面 。 百度统计 登录百度统计， 定位到站点的代码获取页面. 在网站列表中添加博客域名，如图： 在代码获取中复制hm.js?后面那串统计脚本 id。 注：复制的id即为baidu_analytics。 在themes/_config.yaml中找到baidu_analytics。并将获取的id填上。 12# Baidu Analytics IDbaidu_analytics: 65exxxxxxxxxxxxxxxxxxxxxxxxxx895 感谢链接（一些博客很值得订阅） http://theme-next.iissnan.com/getting-started.html https://www.simon96.online/2018/10/12/hexo-tutorial/ http://www.dragonbaby308.com/hexo-theme-next/ https://www.cnblogs.com/php-linux/p/8416122.html https://www.jianshu.com/p/b20fc983005f https://blog.csdn.net/jiunian_2761/article/details/97388997#3_Hexo_Next_32 https://blog.csdn.net/qq_33699981/article/details/60330891 http://sunhome.online/2019/02/01/Valine评论头像以及显示失败处理方法/#more 持续更新～]]></content>
  </entry>
  <entry>
    <title><![CDATA[首篇：建立博客有感及未来发展]]></title>
    <url>%2F2019%2F08%2F01%2Ffirstpost%2F</url>
    <content type="text"><![CDATA[My heart’s been borrowed.And yours has been blue.All’s well that ends well.To end up with you. 本片目录 前言 博客意义 所需工具 未来发展 小广告 前言 2019-07-31，个人博客正式建立，中途一度面临许多困难，使用hugo建站失败，删了3次github仓库，现如今终于平稳运行！ 本博客基于hexo+github建立，再之后的篇幅中将详细介绍如何使用它们建立博客，敬请期待！ 博客的意义 我在一次刷B站的时候，通过偶然的机会了解到博客的概念。UP说到，博客对于程序猿是很有必要的，通过博客，你可以让大家得以分享到你的技术、新知识。对于新人来说，博客可以巩固自身的知识，同时在未来面试，博客能为你加分不少！ 博客不一定都很深，都很有技术，新手依旧可以运行自己的专属博客，且越早越好。 博客也同时可作为笔记使用，通过对比曾经写过的文章，得以温故而知新。并且博客也逐渐成为程序猿的名片，通过访问他人博客空间，我可以了解到他的独特理解，学习到新的技术和方法。 所需工具 本博客基于hexo+github建立 以下工具中，！表示必须，?为可选 ！ node.js （新手，目前该工具实际作用不明确） ！ git （必要掌握基础语法） ！ github账户 （博客内容托管在github仓库中） ？ MWeb （编写博客文章，本篇即使用该软件） ？ Typora (现编写文章所用软件，贫穷，用不起MWeb) ？ VS Code (修改博客内容，且自带终端，可快速更新客） ？ 阿里云 （opes.top域名所购处） 待更新……. 未来发展 持续更新文章，美化博客内容 推广博客 小广告： BiliBili个人空间QQ：1073015375E-Mail：1073015375@qq.com]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hexo使用教程]]></title>
    <url>%2F2019%2F08%2F01%2Fhello-world%2F</url>
    <content type="text"><![CDATA[当你部署完博客后，是不是不知道后面该怎么操作呢？我该怎么才能上传新的博客呢？点击这里 Hexo官网点击这里Hexo官网，在官网有详细的教程，如果以后有问题，可以优先查看官方文档。&lt;HR align=center width= color=#9DB3B3 SIZE=1.5&gt; 新建一篇博客文章1. 命令行新建1$ hexo new "My New Post" 其中My New Post为你的文章标题 2. 软件新建在Markdown编写软件中可同样新建文章，推荐软件有MWeb，Typora，V S Code同样可以。 新文章部署到服务器中一般我们流程为 123$ hexo s$ hexo g$ hexo d hexo s即为hexo server，该命令执行后，可生成本地博客链接，因此你可以先在本地链接 http://localhost:4000 查看文章/博客是否合适再选择部署到服务器中。更多hexo server信息可点击Server查看。 hexo g即为hexo generate，该命令执行后，可生成静态文件（Generate static files）更多hexo generate信息可点击 Generating查看 hexo d即为hexo deploy，该命令执行后，可将文章部署到远程站点（Deploy to remote sites），我的博客将GitHub设为了远程站点，因此执行后，我的GitHub博客仓库将更新为最新的本地文件。更多hexo deploy信息可点击Deployment查看。 后言有问题为什么不问问神奇的Hexo官网呢？ 若有问题，可在下方评论留言。]]></content>
  </entry>
</search>
